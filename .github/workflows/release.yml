name: Release Hugo Site

on:
  push:
    # Publish semver tags as releases.
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    uses: ./.github/workflows/hugo.yml

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write # Allow writing to repository contents for release creation
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download the artifact built by hugo.yml workflow
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site-${{ github.ref_name }}
          path: ./public

      - name: Archive site for release
        run: |
          cd ./public
          tar -czf ../site-${{ github.ref_name }}.tar.gz .

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker image
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .build/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GH release
        uses: softprops/action-gh-release@v2
        with:
          name: Portfolio ${{ github.ref_name }}
          files: site-${{ github.ref_name }}.tar.gz

  deploy:
    # runs-on: ubuntu-latest
    uses: oberpierre/tools/.github/workflows/deploy-to-k8s.yml@feature/container-deployment
    with:
      ansible_inventory_content: ${{ vars.ANSIBLE_INVENTORY }}
      ansible_var_file: .build/deploy-vars.yml
